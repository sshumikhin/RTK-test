version: '3.8'
services:

  nginx:
    build: services-images/nginx/.
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services-images/nginx/nginx.conf:/etc/nginx/nginx.conf

  service-a:
    build: services-images/service-a/.
    container_name: service-a
    command: uvicorn app:app --host 0.0.0.0 --port 7777
    expose:
      - 7777
    restart: always


  service-b:
    build: services-images/service-b/.
    container_name: service-b
    command: uvicorn app:app --host 0.0.0.0 --port 8000
    volumes:
      - migrations:/code/alembic/migrations/versions
    expose:
      - 8000
    env_file:
      - .env
    restart: always


  script:
    build: services-images/script/.
    container_name: script
    command: python3 script.py
    volumes:
      - migrations:/code/alembic/migrations/versions
    expose:
      - 8000
    env_file:
      - .env
    restart: always

  postgres:
    image: postgres:16
    container_name: postgresql-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./psql-initial:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    restart: always


  redis:
    container_name: redis-db
    image: redis:latest
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - 6379
    restart: always



volumes:
  migrations:
  postgres_data:
