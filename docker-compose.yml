version: '3.8'
services:

  nginx:
    build: services-images/nginx/.
    restart: unless-stopped
    ports:
      - "7777:7777"
      - "8000:8000"
    volumes:
      - ./services-images/nginx/nginx.conf:/etc/nginx/nginx.conf

  service-a:
    build: services-images/service-a/.
    container_name: service-a
    command: uvicorn app:app --host 0.0.0.0 --port 7777 --log-level info
    expose:
      - 7777
    env_file:
      - .env
    healthcheck:
      test: curl --fail http://service-a:7777/health || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s


  service-b:
    build: services-images/service-b/.
    container_name: service-b
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --log-level info
    volumes:
      - migrations:/code/alembic/migrations/versions
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: curl --fail http://service-b:8000/health || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s


  script:
    build: services-images/script/.
    container_name: script
    command: python3 script.py
    volumes:
      - migrations:/code/alembic/migrations/versions
    expose:
      - 8000
    depends_on:
      - service-b
      - service-a
      - redis
    env_file:
      - .env
    restart: always

  postgres:
    image: postgres:16
    container_name: postgresql-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432


  redis:
    container_name: redis-db
    image: redis:latest
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5



volumes:
  migrations:
  postgres_data:
